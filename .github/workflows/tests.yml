name: Tests

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: read

jobs:
  tests:
    name: "Test template ${{matrix.template}}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template: 
          - http_api
          - package
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
      - name: Display Go version
        run: go version
      - uses: brokeyourbike/go-mockery-action@v0
        with:
          mockery-version: '2.53.3'
      - name: Install Go Scaffold
        run: |
          go install github.com/go-scaffold/go-scaffold/cmd/go-scaffold@master
      - name: Build
        run: go-scaffold generate ${{matrix.template}} ${{matrix.template}}_test --values ./${{matrix.template}}/values.yaml 
      - name: Init Template
        run: "cd ${{matrix.template}}_test && make init"
      - name: Code Lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9
        with:
          working-directory: "${{matrix.template}}_test/"
      - name: Tests
        run: "cd ${{matrix.template}}_test && make test"
      - name: Check if Dockerfile exists
        id: dockerfile-check
        run: |
          if [ -f "${{matrix.template}}_test/Dockerfile" ]; then
            echo "dockerfile_exists=true" >> $GITHUB_OUTPUT
          else
            echo "dockerfile_exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Set up Docker Buildx
        if: steps.dockerfile-check.outputs.dockerfile_exists == 'true'
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435
      - name: Build and push Docker image
        if: steps.dockerfile-check.outputs.dockerfile_exists == 'true'
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ${{matrix.template}}_test
          platforms: 'linux/amd64'
          build-args: |
            VERSION=dev
